var u=Object.defineProperty;var r=(i,a,t)=>a in i?u(i,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[a]=t;var n=(i,a,t)=>r(i,typeof a!="symbol"?a+"":a,t);import{w as h}from"./index.B1bOx_HO.js";import{f as o,t as m}from"./imageUtils.D8hcnusr.js";import{d}from"./database.B863XBD3.js";const I=h({activeProject:null});class l{constructor(a={}){n(this,"id");n(this,"name");n(this,"namespace");n(this,"tiles");n(this,"worldMapData");n(this,"modIcon");n(this,"thumbnail");this.id=a.id??null,this.name=a.name??"Unnamed Project",this.namespace=a.namespace??null,this.tiles=a.tiles??null,this.worldMapData=a.worldMapData??null,this.modIcon=a.modIcon??null,this.thumbnail=a.thumbnail??null}static async new(){const a=new l;return await a.save(),a}static async fromDatabaseProject(a){const t=a.modIcon===null?null:await o(a.modIcon.buffer),s=a.thumbnail===null?null:await o(a.thumbnail.buffer);return new l({...a,modIcon:t,thumbnail:s})}async save(){const a=this.modIcon===null?null:new Uint8Array(await m(this.modIcon)),t=this.thumbnail===null?null:new Uint8Array(await m(this.thumbnail)),s={id:this.id??void 0,name:this.name,namespace:this.namespace,tiles:this.tiles,worldMapData:this.worldMapData,modIcon:a,thumbnail:t},e=await d.projects.put(s);return this.id===null&&(this.id=e),this}}export{l as P,I as s};
