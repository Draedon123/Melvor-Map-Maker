import{b as C}from"./paths.B9nf68je.js";function x(t,e){const s=[],r=Math.floor(t.length/e),o=t.length-r*e;for(let n=0;n<e;n++)s[n]=t.slice(n*r,n*r+r),n<o&&s[n].push(t.at(-(n+1)));return s}const E=""+new URL("../workers/basis-ClX4h8Ff.js",import.meta.url).href;async function P(t,e,s=()=>{}){const r=`${C}/basis_encoder.js`,o=await fetch(r);if(!o.ok)throw new Error(`[imageUtils | toBasis] | Could not fetch basis_encoder.js.
Fetched url: ${r}
Response Status: ${o.status}`);const n=await o.text(),c=await Promise.all(t.map(h=>new Promise(l=>{R(h.image).then(i=>{l({name:h.name,image:i})})})));return new Promise((h,l)=>{const i=[],a=Array.from({length:e}).map(()=>new Worker(E,{type:"classic"})),u=x(c,e);let w=0;for(let d=0;d<a.length;d++){const b=a[d],p=u[d];b.addEventListener("message",f=>{if(f.data.status==="error"){l(new Error(f.data.reason));return}if(w++,s(w/c.length,w,c.length),i.push({name:f.data.name,file:f.data.data}),w===c.length){h(i);for(const m of a)m.terminate()}});const v={mode:"encode",basisEncoderJS:n,data:p};b.postMessage(v)}})}async function y(t,e=2,s=()=>{}){const r=`${C}/basis_encoder.js`,o=await fetch(r);if(!o.ok)throw new Error(`[imageUtils | fromBasis] | Could not fetch basis_encoder.js.
Fetched url: ${r}
Response Status: ${o.status}`);const n=await o.text();return new Promise((c,h)=>{const l=Array.from({length:e}).map(()=>new Worker(E,{type:"classic"})),i=x(t,e),a={tileWidth:0,tileHeight:0,tiles:[]};let u=0;for(let w=0;w<e;w++){const d=l[w],b=new OffscreenCanvas(0,0),p=i[w];d.addEventListener("message",f=>{const m=f.data;if(m.status==="error"){h(new Error(m.reason));return}const g=new Image;g.onload=()=>{u++,a.tileWidth=g.width,a.tileHeight=g.height;const U=m.name.split(/_|@/g);if(a.tiles.push({x:parseInt(U[1]),y:parseInt(U[2]),image:g}),URL.revokeObjectURL(m.blobURL),s(u/t.length,u,t.length),u===t.length){for(const L of l)L.terminate();c(a)}},g.src=m.blobURL});const v={mode:"transcode",data:p,canvas:b,basisEncoderJS:n};d.postMessage(v,[b])}})}function j(t,e,s){return new Promise((r,o)=>{const n=document.createElement("canvas"),c=n.getContext("2d");if(c===null){o(new Error("[imageUtils | resize] | Could not get 2D Canvas Rendering Context"));return}const h=e.type==="scale"?t.width*e.x:e.type==="additive"?t.width+e.x:e.x,l=e.type==="scale"?t.height*e.y:e.type==="additive"?t.height+e.y:e.y;n.width=h,n.height=l,c.drawImage(t,0,0,n.width,n.height),n.toBlob(i=>{if(i===null){o(new Error("[imageUtils | resize] | Could not turn canvas into blob"));return}const a=URL.createObjectURL(i),u=new Image;u.onload=()=>{r(t)},u.src=a})})}function R(t){return new Promise((e,s)=>{k(t).toBlob(o=>{if(o===null){s(new Error("[imageUtils | toBlob] | Could not turn canvas into blob"));return}e(o)})})}async function S(t,e,s,r=()=>{}){const o=[],n=t.width/e,c=t.height/s,h=e*s;let l=0;for(let i=0;i<e;i++)for(let a=0;a<s;a++)o.push(new Promise((u,w)=>{const d=document.createElement("canvas"),b=d.getContext("2d"),p=n*i,v=c*a;if(d.width=n,d.height=c,b===null)throw new Error("[imageUtils | split] | Could not get 2d canvas rendering context");b.drawImage(t,p,v,n,c,0,0,n,c),d.toBlob(f=>{if(f===null){w(new Error("[imageUtils | split] | Could not turn canvas into blob"));return}const m=URL.createObjectURL(f),g=new Image;g.onload=()=>{l++,r(l/h,l,h),u({x:i,y:a,image:g})},g.src=m})}));return await Promise.all(o)}async function _(t){return await(await R(t)).arrayBuffer()}function $(t){return new Promise(e=>{const s=new Blob([t]),r=URL.createObjectURL(s),o=new Image;o.onload=()=>{e(o)},o.src=r})}function k(t,e){const s=document.createElement("canvas"),r=s.getContext("2d");if(r===null)throw new Error("[imageUtils | toCanvas] | Could not get 2d canvas rendering context");return s.width=t.width,s.height=t.height,r.drawImage(t,0,0,t.width,t.height),s}export{_ as a,P as b,y as c,k as d,$ as f,j as r,S as s,R as t};
